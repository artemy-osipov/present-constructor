import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    // https://github.com/oracle/graal/issues/6957
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.kapt' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
    id 'com.bnorm.power.kotlin-power-assert' version '0.13.0'
    id 'org.springframework.boot' version '3.1.5'
    id 'org.graalvm.buildtools.native' version '0.9.28'
    id 'com.github.ben-manes.versions' version '0.49.0'
    id 'com.adarshr.test-logger' version '4.0.0'
}

group = 'io.github.artemy.osipov.shop'
version = '1.5.0-SNAPSHOT'

dependencies {
    kapt enforcedPlatform(SpringBootPlugin.BOM_COORDINATES)
    implementation enforcedPlatform(SpringBootPlugin.BOM_COORDINATES)

    kapt 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:6.33.1'
    implementation 'io.sentry:sentry-logback:6.33.1'

    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.postgresql:r2dbc-postgresql'

    implementation 'com.github.f4b6a3:ulid-creator:5.2.2'
    implementation 'fr.opensagres.xdocreport:fr.opensagres.xdocreport.document.docx:2.0.4'
    implementation 'fr.opensagres.xdocreport:fr.opensagres.xdocreport.template.freemarker:2.0.4'

    implementation 'io.github.oshai:kotlin-logging-jvm:5.1.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1'
    implementation 'io.projectreactor:reactor-tools'

    def mapstructVersion = '1.5.5.Final'
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    kapt "org.mapstruct:mapstruct-processor:$mapstructVersion"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.docx4j:docx4j-JAXB-ReferenceImpl:11.4.9'
    testImplementation 'org.testcontainers:cockroachdb'
    testImplementation 'org.postgresql:postgresql'
    testImplementation 'io.projectreactor.tools:blockhound:1.0.8.RELEASE'
    testImplementation 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-debug'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.1.0'
}

test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(17)
}

bootBuildImage {
    environment.putAll([
            "BP_NATIVE_IMAGE_BUILD_ARGUMENTS": "--initialize-at-build-time=ch.qos.logback,org.apache.logging,org.slf4j.LoggerFactory --initialize-at-run-time=io.netty"
    ])
}

graalvmNative {
    metadataRepository {
        enabled = true
    }
}

// https://github.com/reactor/BlockHound/issues/33
tasks.withType(Test).configureEach {
    jvmArgs += ["-XX:+AllowRedefinitionToAddDeleteMethods"]
}
tasks.named('processTestAot').configure {
    jvmArgs "-XX:+AllowRedefinitionToAddDeleteMethods"
}
